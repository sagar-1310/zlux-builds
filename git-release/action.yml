name: "zlux-git-release"
description: "This action helps tag and merge zlux-release"
inputs:
  github-user:
    description: 'github user'
    required: false
  github-password:
    description: 'github password'
    required: false
  github-email:
    description: 'github email'
    required: false
  default-base:
    description: 'base branch to build from'
    required: false
  release-version:
    description: 'version of tags'
    required: false
  github-token:
    description: 'auth token'
    required: false
  merge-to-master:
    description: 'Merge rc to master'
    required: false
  update-rc:
    description: 'Merge staging to rc'
    required: false  
  zowe-common-c-head:
    description: 'head of zowe-common-c'
    required: false
    

runs:
  using: "composite"
  steps:
    - name: 'process env vars'
      run: |
        # Sanitize envvars by (in order)
        # 1. remove comments (start with #); 
        # 2. remove blank lines
        sed '/^#/d' envvars.env | awk NF > envvars.env.new
        rm envvars.env
        mv envvars.env.new envvars.env
        cat envvars.env >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash
    
    
    - name: 'determine version'
      run: |
        if [ ${release-version: 1:1} == 1 ];
        then
          echo STAGING_BRANCH="v1.x/staging" >> $GITHUB_ENV
          echo RELEASE_BRANCH="v1.x/rc" >> $GITHUB_ENV
          echo MASTER_BRANCH="v1.x/master" >> $GITHUB_ENV
        else
          echo STAGING_BRANCH="v2.x/staging" >> $GITHUB_ENV
          echo RELEASE_BRANCH="v2.x/rc" >> $GITHUB_ENV
          echo MASTER_BRANCH="v2.x/master" >> $GITHUB_ENV
        fi
      shell: bash
      
    
    - name: 'merge rc to master'
      run: |
        if [ "${{ inputs.merge-to-master }}" == "true" ];
        then 
            for x in $REPOS; do
              curl \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ inputs.github-token }}" \
                https://api.github.com/repos/zowe/$x/merges \
                -d '{"base":"${MASTER_BRANCH}","head":"${RELEASE_BRANCH}","commit_message":"Zowe Suite ${release-version}"}' \
                -w "%{http_code}"
            done
        else
          echo "Nothing to do here"
        fi
      shell: bash
      
    
    - name: 'merge staging to rc'
      run: |
        if [ "${{ inputs.update-rc }}" == "true" ];
        echo ${RELEASE_BRANCH}
        echo ${STAGING_BRANCH}
        then
            for x in $REPOS; do
              if [ $x == "zowe-common-c" ]
              then 
                echo 'merging {$x} common-c'
                curl \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ inputs.github-token }}" \
                https://api.github.com/repos/zowe/$x/merges \
                -d '{"base":"${RELEASE_BRANCH}","head":"${{ inputs.zowe-common-c-head }}","commit_message":"Zowe Suite ${release-version}"}' \
                -w "%{http_code}"
              else
                echo 'merging {$x}'
                echo 'https://api.github.com/repos/zowe/$x/merges'
                curl \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ inputs.github-token }}" \
                https://api.github.com/repos/zowe/$x/merges \
                -d '{"base":"${RELEASE_BRANCH}","head":"${STAGING_BRANCH}","commit_message":"Zowe Suite ${release-version}"}' \
                -w "%{http_code}"
              fi
            done
        else
          echo "Nothing to do here"
        fi
      shell: bash
