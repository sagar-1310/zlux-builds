name: "Build and Test plugins"
description: "This action helps build and test all the zlux plugins"
inputs:
  build-zss:
    description: 'Does plugins contains zss code'
    required: true


runs:
  using: "composite"
  steps:
    - name: 'checkout'
      run: |
        cd ..
        export MVD_HOME_DIR=$(pwd) 
        echo MVD_HOME_DIR=$(pwd) >> $GITHUB_ENV
        git clone -b v3.x/master https://github.com/1000TurquoisePogs/zowe-install-packaging.git
        npm config set registry https://zowe.jfrog.io/zowe/api/npm/npm-release/
        mkdir zlux
        cp -rf $REPOSITORY_NAME zlux/
        cd zlux
        ls
        git clone https://github.com/zowe/zlux-app-manager.git -b $DEFAULT_PLUGIN_BRANCH
        git clone https://github.com/zowe/zlux-platform.git -b $DEFAULT_PLUGIN_BRANCH
        git clone https://github.com/zowe/zlux-build.git -b $DEFAULT_PLUGIN_BRANCH
        if ${{ inputs.build-zss }}
        then 
          git clone https://github.com/zowe/zss.git -b $DEFAULT_PLUGIN_BRANCH 
          git clone https://github.com/zowe/zowe-common-c.git -b $DEFAULT_PLUGIN_BRANCH
          cd zss 
          git submodule update --init 
          tar cf ../../zss.tar -H ustar * 
          cd ../zowe-common-c 
          tar cf ../../zowe-common-c.tar -H ustar *
          echo "plugin contains ZSS code"
          echo BUILD_ZSS=true >> $GITHUB_ENV
        else
          echo BUILD_ZSS=false >> $GITHUB_ENV
          echo "Plugins doesn't contain zss code"
        fi
      shell: bash
  
    
    - name: 'npm ci'
      run: |
        git config --global url."https://github.com/".insteadOf "ssh://git@github.com:"
        git config --global url."https://".insteadOf "ssh://"
        if [ $RELEASE = "true"];
        then 
          cd ../zlux/zlux-app-manager/virtual-desktop && npm install
        else
          cd ../zlux/zlux-app-manager/virtual-desktop && npm ci
        fi
      shell: bash
    
    - name: 'build plugin'
      run: |
        git config --global url."https://github.com/".insteadOf "ssh://git@github.com:"
        git config --global url."https://".insteadOf "ssh://"
        cd ../zlux
        export MVD_DESKTOP_DIR=$(pwd)/zlux-app-manager/virtual-desktop
        echo $MVD_DESKTOP_DIR
        packages=$(find ./${REPOSITORY_NAME} -name package.json | { grep -v node_modules || true; })
        for package in $packages
        do
          if [ $(node -e "const fs = require('fs'); const pac = JSON.parse(fs.readFileSync('${package}')); if (pac.scripts && pac.scripts.build) { console.log('true')};") = "true" ]
          then
            sh -c "cd `dirname $package` && npm ci && npm run build "
          fi
        done
      shell: bash
      
    - name: 'test'
      run: |
        cd ../zlux
        packages=$(find ./${REPOSITORY_NAME} -name package.json | { grep -v node_modules || true; })
        for package in $packages
        do
          if [ $(node -e "const fs = require('fs'); const pac = JSON.parse(fs.readFileSync('${package}')); if (pac.scripts && pac.scripts.build) { console.log('true')};") = "true" ]
          then
            sh -c "cd `dirname $package` && npm test "
          fi
        done
      shell: bash
    
    - name: 'remove source code'
      run: |
        cd ../zlux/zlux-build 
        ant removeSource
      shell: bash
      
    - name: 'package tar'
      run: |
        cd ../zlux/$REPOSITORY_NAME && tar cf ../../plugin.tar -H ustar *
        cd ../zlux-build && tar cf ../../zlux-build.tar -H ustar *
      shell: bash
 
